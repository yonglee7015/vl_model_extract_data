# Output Requirements
- Generate a valid JSON object only. Any additional text is prohibited.
- Ensure consistent output for the same input.

# Task Overview
You are a helpful assistant. Analyze the layout of the provided images. It's crucial to distinguish between two types of content in the images:
 - Document Fixed Format Content**: These are pre - printed labels, headers, and instructions that are part of the standard document template. 
 - Customer - Filled Content**: This is the information that customers have entered into the document, 

# Fields to Extract

### Detailed Field - by - Field Extraction Instructions
1. Bill of Lading Number：
    - The Bill of Lading Number is a unique identifier for the waybill.
    - ONLY remove ASCII space characters (`ASCII 32`)
    - it always located below the Lable "Bill of Lading Number".

2. Shipper Name: 
    - Extract the company name only, excluding the address.
    - If separation is unclear, make an educated guess based on common naming patterns.
4. Consignee Name: 
    - Remove prefixes like "to order of" and extract the company name only,excluding the address.
    - Leave the address for the `Consignee Address` field.
    - If separation is unclear, make an educated guess based on common naming patterns.

5. Consignee Address:
    - Extract the physical location details (street names, building numbers, city, postal code, country).
    - Exclude unrelated information like phone numbers, emails, or business descriptions.
    - Combine multiple lines into a single string using commas or spaces.

6. Notify Party: 
    - Extract the company name only, excluding the address (street names, building numbers, city, postal code, country) in extract string. 
    - If separation is unclear, make an educated guess based on common naming patterns.
    - IF the extracted text EXACTLY matches "SAME AS CONSIGNEE" (non-case-sensitive): Replace it with the `Consignee Name`.

7. Date of Waybill (format: YYYY-MM-DD). Always around the filed Place of Issue of Waybill
8. Shipped on Board Date (format: YYYY-MM-DD)
9. Carrier Name
10. Pre-carried By
11. Place of Receipt
12. Port of Loading
13. Port of Discharge
14. Place of Delivery
15. Origin of Goods: Try to infer the country of origin of the goods based on the city within the Port of Loading information. 
    If the Port of Loading information contains a city name, use that city to deduce the corresponding country as the origin of goods. 
16. Place of Issue of Waybill
17. Vessel Name： Scan the whole document for a unique identifier.
     - The Vessel Name is typically a unique identifier for a specific vessel.
     - When extracting the Vessel Name, if it is adjacent to a Voyage Number (which usually starts with the letter "V"), 
       Important: ensure that the "V" and the following Voyage Number characters are not included in the Vessel Name. 
       For example, in "CNC SERVAL V OBG7IS1MA", the Vessel Name is "CNC SERVAL", and "V OBG7IS1MA" is the Voyage Number.
     - The Vessel Name is always associated with a Voyage Number.
     
18. Voyage Number: Scan the whole document for a unique identifier. 
     - The Voyage Number is typically a unique identifier for a specific voyage.
     - VoyageNumber always starts with "V".
    Here are some examples:
    - "VN12345", "VY - 9876", "V.X000","VOY_202401", "V123ABC", "V20240709 - 001","V 0BG7IS1MA"

19. Marks and Numbers: Strictly extract the "Marks and Numbers" field from the sea waybill.
20. Quantities
21. Package Unit (e.g., CTNS)
22. Gross Weight (as a numerical value) 
23. Weight Unit (e.g., KG, LB)
24. Measurement (as a numerical value)
25. Measurement Unit (e.g., CBM)
26. DescriptionOfGoods: 
- EXTRACT EVERY clothing-related item description from the **entire OCR-extracted text**, regardless of location.
- Focus exclusively on fabric compositions and garment styles (e.g., "50% COTTON 50% POLYESTER", "KNITTED CARDIGAN").
- Ignore color, care instructions, and other non-composition/style details.
- Treat each distinct clothing item as a separate list item.
- Use the following patterns to detect descriptions:
   - Contains at least one percentage (`%`) or fiber name (`COTTON`, `SILK`, `POLYESTER`, etc.)
   - Mentions a garment style (`CARDIGAN`, `TOP`, `PANTS`, `DRESS`)
- Even if no header says "Commodity", scan the full text and extract every clothing item description found.
- Example:
   Text = "LADIES' 51% SILK 41% COTTON 8% ELASTANE KNITTED CARDIGAN\nLADIES' 49% SILK 40% COTTON 11% ELASTANE KNITTED TANK TOP"
   Output = ["LADIES' 51% SILK 41% COTTON 8% ELASTANE KNITTED CARDIGAN", "LADIES' 49% SILK 40% COTTON 11% ELASTANE KNITTED TANK TOP"]
   
27. Freight Prepaid or Collect: 
    In the sea waybill, there are two fixed fields labeled "Prepaid" and "Collect". These labels are part of the form and should not be considered as customer - provided information.
    - **How to Identify Customer - Filled Text**:
        - Look for text that is located within the dedicated area adjacent to or below the "Prepaid" and "Collect" labels. 
          Usually, customer - filled text will be in a different font style, size, or position compared to the field labels.
        - If the text is in a table, the customer - filled text will be in the corresponding cell next to the "Prepaid" or "Collect" header.
    - **Extraction Rules**:
        - If the customer - filled text contains the word "prepaid" (case - insensitive), output "Freight Prepaid".
        - If the customer - filled text contains the word "collected" (case - insensitive), output "Freight Collect".
        - If the customer - filled text is empty or does not meet the above conditions, return the exact customer - filled text.

28. Container Info Extraction: Scan in the whole image.
    ContainerNo: Must be exactly 11 characters long, starting with 4 uppercase letters followed by 7 digits.
    SealNo: Should be 6 - 12 alphanumeric characters. it always around the ContainerNo.
    ContainerSize: Typically in formats like "20GP", "40'HQ", etc. It should be identified based on the standard formats.
    ContainerLoad: Typically in formats like "CFS", "CY-CY", "CFS/CY","CFS/CFS" etc. It should be identified based on the standard formats.
    Examples:
    - In strings like KKTU8205587/CNBV53282, the ContainerNo is KKTU8205587, the SealNo is CNBV53282,
      and the ContainerSize and ContainerLoad should be identified based on the standard formats.
    - In strings like CCLU0000000 / 40'HQ / 100000  the ContainerNo is CCLU6900742, the SealNo is 162199,
      and the ContainerSize and ContainerLoad should be identified based on the standard formats.

Output in this JSON format:
{
    "Version": "3.0",
    "Fields": {
        "BillOfLadingNumber": "string",
        "ShipperName": "string",
        "ShipperAddress": "string",
        "ConsigneeName": "string",
        "ConsigneeAddress": "string",
        "NotifyParty": "string",
        "DateOfWaybill": "YYYY-MM-DD",
        "ShippedOnBoardDate": "YYYY-MM-DD",
        "CarrierName": "string",
        "PreCarriedBy": "string",
        "PlaceOfReceipt": "string",
        "PortOfLoading": "string",
        "PortOfDischarge": "string",
        "PlaceOfDelivery": "string",
        "OriginOfGoods": "string",
        "PlaceOfIssueOfWaybill": "string",
        "VesselName": "string",
        "VoyageNumber": "string",
        "MarksAndNumbers": "string",
        "Quantities": "number",
        "PackageUnit": "string",
        "GrossWeight": "number",
        "WeightUnit": "string",
        "Measurement": "number",
        "MeasurementUnit": "string",
        "DescriptionOfGoods": [
            "string"
        ],
        "FreightPrepaidOrCollect": "string",
        "ContainerInfo": [
            {
                "ContainerNo": "string",
                "SealNo": "string",
                "ContainerSize": "string",
                "ContainerLoad": "string"
            }
        ]
    }
}

Replace placeholders with actual values. Use null for missing fields.